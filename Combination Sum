class Solution {
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        solve(0,target,candidates,ans,ds);
        return ans;
    }
    private:
    void solve(int index,int target,vector<int> can,vector<vector<int>> &ans,vector<int> &ds){
        if(index==can.size()){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }
        if(can[index]<=target){
            ds.push_back(can[index]);
            solve(index,target-can[index],can,ans,ds);
            ds.pop_back();
        }
        solve(index+1,target,can,ans,ds);
    }
};
